{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/workspace/tooravel_app/components/VideoCard/VideoCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box, Typography, Button, Card, CardContent, CardActions, Modal } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from './VideoCard.style.js';\nconst useStyles = makeStyles(styles);\nexport default function VideoCard({\n  videoInfo\n}) {\n  const classes = useStyles();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let viewRecount = String(videoInfo.viewCount);\n\n  if (videoInfo.viewCount > 10000) {\n    viewRecount = String(parseInt(videoInfo.viewCount / 10000)) + '만';\n  } else if (videoInfo.viewCount > 1000) {\n    viewRecount = String(parseInt(videoInfo.viewCount / 1000)) + '천';\n  }\n\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Modal, {\n    className: classes.videoModal,\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(\"iframe\", {\n    width: \"1000\",\n    height: \"600\",\n    src: `https://www.youtube.com/embed/${videoInfo.videoId}`,\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay=1; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowfullscreen: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    className: classes.videoCard,\n    onClick: () => handleOpen(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(Card, {\n    className: classes.videoCardSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(CardActions, {\n    className: classes.videoCardImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    className: classes.videoCardThumbnail,\n    src: videoInfo.thumbnail,\n    alt: \"\\uC378\\uB124\\uC77C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  })), __jsx(CardContent, {\n    className: classes.videoCardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"\\uC870\\uD68C\\uC218 \", viewRecount, \"\\uD68C \\xB7 \", videoInfo.publishedAt), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"by \", videoInfo.channelTitle), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, videoInfo.title)))));\n}\nVideoCard.propTypes = {\n  videoInfo: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/macbook/Desktop/workspace/tooravel_app/components/VideoCard/VideoCard.js"],"names":["React","useState","Box","Typography","Button","Card","CardContent","CardActions","Modal","PropTypes","makeStyles","styles","useStyles","VideoCard","videoInfo","classes","open","setOpen","handleOpen","handleClose","viewRecount","String","viewCount","parseInt","videoModal","videoId","videoCard","videoCardSection","videoCardImage","videoCardThumbnail","thumbnail","videoCardContent","publishedAt","channelTitle","title","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, Button, Card, CardContent, CardActions, Modal } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from './VideoCard.style.js';\n\nconst useStyles = makeStyles(styles);\nexport default function VideoCard({ videoInfo }) {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    let viewRecount = String(videoInfo.viewCount);\n    if (videoInfo.viewCount > 10000) {\n        viewRecount = String(parseInt(videoInfo.viewCount / 10000)) + '만';\n    } else if (videoInfo.viewCount > 1000) {\n        viewRecount = String(parseInt(videoInfo.viewCount / 1000)) + '천';\n    }\n\n    return (\n        <Box>\n            <Modal className={classes.videoModal}\n                open={open}\n                onClose={handleClose}>\n                <iframe width=\"1000\" height=\"600\" src={`https://www.youtube.com/embed/${videoInfo.videoId}`} frameborder=\"0\" allow=\"accelerometer; autoplay=1; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen='true'></iframe>\n            </Modal>\n            <Button className={classes.videoCard} onClick={() => handleOpen()}>\n                <Card className={classes.videoCardSection}>\n                    <CardActions className={classes.videoCardImage}>\n                        <img className={classes.videoCardThumbnail} src={videoInfo.thumbnail} alt='썸네일'></img>\n                        {/* <Box className={classes.videoCardLogo}>\n                            <img src='https://www.tooravel.net/static/common/img/icon_ytb.png' alt='youtube로고'></img>\n                        </Box> */}\n                    </CardActions>\n                    <CardContent className={classes.videoCardContent}>\n                        <Typography >조회수 {viewRecount}회 · {videoInfo.publishedAt}</Typography>\n                        <Typography >by {videoInfo.channelTitle}</Typography>\n                        <Typography >{videoInfo.title}</Typography>\n                    </CardContent>\n                </Card>\n            </Button>\n        </Box>\n    )\n}\n\nVideoCard.propTypes = {\n    videoInfo: PropTypes.object.isRequired,\n};"]},"metadata":{},"sourceType":"module"}